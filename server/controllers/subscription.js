const User = require("../models/User");
const asyncHandler = require("express-async-handler");

// Set your secret key. Remember to switch to your live secret key in production.
// See your keys here: https://dashboard.stripe.com/apikeys
const stripe = require("stripe")(process.env.STRIPE_SECRET_KEY);

exports.createSubscription = asyncHandler(async (req, res, next) => {
  user = await User.findOne({ _id: "60e6a02297ef8b1df5ab216f" });
  console.log("here");
  let customerId;
  //if user does not have customer id which is generated by stripe, create customer
  if (!user.stripeId) {
    // Create a new customer object
    const customer = await stripe.customers.create({
      email: user.email,
    });
    customerId = customer.id;
    user.stripeId = customerId;
    user.save();
  } else {
    customerId = user.stripeId;
  }
  console.log("ðŸš€ ~ exports.createSubscription=asyncHandler ~ customerId", customerId);
  const priceId = req.body.priceId;

  // Create the subscription. Note we're expanding the Subscription's
  // latest invoice and that invoice's payment_intent
  // so we can pass it to the front end to confirm the payment
  const subscription = await stripe.subscriptions.create({
    customer: customerId,
    items: [
      {
        price: priceId,
      },
    ],
    payment_behavior: "default_incomplete",
    expand: ["latest_invoice.payment_intent"],
  });

  res.send({
    subscriptionId: subscription.id,
    clientSecret: subscription.latest_invoice.payment_intent.client_secret,
  });
});
